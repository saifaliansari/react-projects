{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuoteItem","props","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","NewQuote","React","lazy","QuoteDetail","Notfound","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f3a70cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-b7ee0-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to = {`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`)\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Decending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react'\nimport QuoteList from '../components/quotes/QuoteList'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport useHttp from '../hooks/use-http'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\nimport { getAllQuotes } from '../lib/api.js'\n\nconst AllQuotes = () => {\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes)\n    useEffect(() => {\n        sendRequest();\n    }, [sendRequest]);\n\n    if (status === 'pending' || status === null) {\n        return <div className='centered'><LoadingSpinner></LoadingSpinner></div>\n    }\n    if (error) {\n        return <p className='centered focused'>{error}</p>\n    }\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n        return <NoQuotesFound></NoQuotesFound>;\n    }\n    return <QuoteList quotes={loadedQuotes}></QuoteList>;\n}\n\nexport default AllQuotes;\n","\nimport { NavLink } from 'react-router-dom'\nimport classes from './MainNavigation.module.css'\nconst MainNavigation = () => {\n    return (\n        <header className={classes.header}>\n            <div className={classes.logo}>Great Quotes</div>\n            <nav className={classes.nav}>\n                <ul>\n                    <li>\n                        <NavLink activeClassName={classes.active} to='/quotes'>All Quotes</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName={classes.active} to='/new-quote'>New Quote</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default MainNavigation;","import { Fragment } from 'react';\nimport classes from './Layout.module.css'\nimport MainNavigation from './MainNavigation';\nconst Layout = (props) => {\n    return (\n        <Fragment>\n            <MainNavigation></MainNavigation>\n            <main className={classes.main}>{props.children}</main>\n        </Fragment>\n    )\n}\n\nexport default Layout;","import React, { Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport AllQuotes from './pages/AllQuotes';\nimport Layout from './components/layout/Layout';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\n\nconst NewQuote = React.lazy(() => {\n  return import('./pages/NewQuote');\n});\n\nconst QuoteDetail = React.lazy(()=>{\n  return import('./pages/QuoteDetail');\n})\n\nconst Notfound = React.lazy(()=>{\n  return import('./pages/Notfound');\n});\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense fallback={<div className='centered'><LoadingSpinner></LoadingSpinner></div>}>\n        <Switch>\n          <Route path='/' exact>\n            <Redirect to='quotes'></Redirect>\n          </Route>\n          <Route path='/quotes' exact>\n            <AllQuotes></AllQuotes>\n          </Route>\n          <Route path='/quotes/:quoteId'>\n            <QuoteDetail ></QuoteDetail>\n          </Route>\n          <Route path='/new-quote'>\n            <NewQuote></NewQuote>\n          </Route>\n          <Route path='*'>\n            <Notfound></Notfound>\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}