{"ast":null,"code":"var _jsxFileName = \"/Users/saifaliansari/workspace/react-projects/react-tasks-app/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n  const createTask = useCallback(taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  }, []);\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: 'https://react-http-b7ee0-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      body: {\n        text: taskText\n      }\n    }, createTask.bind());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"R6Sus8VKzEQaeV4imtM/OrfEZls=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-tasks-app/src/components/NewTask/NewTask.js"],"names":["useCallback","useState","useHttp","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskData","generatedId","name","createdTask","id","text","taskText","onAddTask","enterTaskHandler","url","method","body","bind"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDR,OAAO,EAAlE;AACA,QAAMS,UAAU,GAAGX,WAAW,CAAEY,QAAD,IAAY;AACzC,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CADyC,CACN;;AACjC,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEC;AAAzB,KAApB;AAEAZ,IAAAA,KAAK,CAACa,SAAN,CAAgBJ,WAAhB;AACH,GAL6B,EAK5B,EAL4B,CAA9B;;AAOA,QAAMK,gBAAgB,GAAG,MAAOF,QAAP,IAAoB;AAC3CR,IAAAA,eAAe,CAAC;AACdW,MAAAA,GAAG,EAAE,iEADS;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,IAAI,EAAE;AAAEN,QAAAA,IAAI,EAAEC;AAAR;AAHQ,KAAD,EAIbP,UAAU,CAACa,IAAX,EAJa,CAAf;AAKD,GAND;;AAQA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEJ,gBAAvB;AAAyC,MAAA,OAAO,EAAEb;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvBD;;GAAMH,O;UACuDH,O;;;KADvDG,O;AAyBN,eAAeA,OAAf","sourcesContent":["import { useCallback, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n  const createTask = useCallback((taskData)=>{\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n  },[]) \n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest({\n      url: 'https://react-http-b7ee0-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      body: { text: taskText }\n    },createTask.bind())\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}