{"ast":null,"code":"var _jsxFileName = \"/Users/saifaliansari/workspace/react-projects/react-tasks-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const tranformTasks = task;\n  useHttp({\n    url: 'https://react-http-b7ee0-default-rtdb.firebaseio.com/tasks.json'\n  });\n\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-b7ee0-default-rtdb.firebaseio.com/tasks.json');\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WHoLmzAMPD7nkcm9gecdSBRDU9c=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-tasks-app/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","tranformTasks","task","url","fetchTasks","taskText","setIsLoading","setError","response","fetch","ok","Error","data","json","loadedTasks","taskKey","push","id","text","err","message","taskAddHandler","prevTasks","concat","isLoading","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,aAAa,GAAIC,IAAvB;AACAL,EAAAA,OAAO,CAAC;AAACM,IAAAA,GAAG,EAAC;AAAL,GAAD,CAAP;;AAEA,QAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACrCC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;AAC1BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,UAAAA,EAAE,EAAEF,OAAN;AAAeG,UAAAA,IAAI,EAAEN,IAAI,CAACG,OAAD,CAAJ,CAAcG;AAAnC,SAAjB;AACD;;AAEDlB,MAAAA,QAAQ,CAACc,WAAD,CAAR;AACD,KAlBD,CAkBE,OAAOK,GAAP,EAAY;AACZZ,MAAAA,QAAQ,CAACY,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAzBD;;AA2BAb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMiB,cAAc,GAAInB,IAAD,IAAU;AAC/BF,IAAAA,QAAQ,CAAEsB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBrB,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEmB;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEtB,KADT;AAEE,MAAA,OAAO,EAAEyB,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAErB;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GApDQN,G;UAIPD,O;;;KAJOC,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const tranformTasks = (task)\n  useHttp({url:'https://react-http-b7ee0-default-rtdb.firebaseio.com/tasks.json'},)\n\n  const fetchTasks = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-b7ee0-default-rtdb.firebaseio.com/tasks.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}