{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst intialState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.val,\n      isTouched: state.isTouched\n    };\n  } else if (action.type === 'BLUR') {\n    return {\n      value: action.val,\n      isTouched: true\n    };\n  } else if (action.type === 'RESET') {}\n\n  return intialState;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, intialState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      val: event.target.value\n    });\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  return {\n    value: inputState.value,\n    hasError: hasError,\n    isValid: valueIsValid,\n    reset: reset,\n    valueChangeHandler: valueChangeHandler,\n    inputBlurHandler: inputBlurHandler\n  };\n};\n\n_s(useInput, \"a9PuIBfBePgjD64DMWa/ErqChqk=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-forms-app/src/hooks/use-input.js"],"names":["useReducer","intialState","value","isTouched","inputStateReducer","state","action","type","val","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,SAAS,EAAE;AAFK,CAApB;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA2B;AAC1B,WAAO;AAACL,MAAAA,KAAK,EAAGI,MAAM,CAACE,GAAhB;AAAqBL,MAAAA,SAAS,EAAGE,KAAK,CAACF;AAAvC,KAAP;AAEA,GAHD,MAGM,IAAGG,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA0B;AAC5B,WAAO;AAACL,MAAAA,KAAK,EAAGI,MAAM,CAACE,GAAhB;AAAqBL,MAAAA,SAAS,EAAG;AAAjC,KAAP;AAEH,GAHK,MAGA,IAAGG,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA2B,CAEhC;;AAED,SAAON,WAAP;AAEH,CAbD;;AAeA,MAAMQ,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBZ,UAAU,CAACI,iBAAD,EAAoBH,WAApB,CAAzC;AACA,QAAMY,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACT,KAAZ,CAAlC;AACA,QAAMY,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACR,SAA7C;;AAEA,QAAMY,kBAAkB,GAAGC,KAAK,IAAI;AAChCJ,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,GAAG,EAAEQ,KAAK,CAACC,MAAN,CAAaf;AAAnC,KAAD,CAAR;AAEH,GAHD;;AAIA,QAAMgB,gBAAgB,GAAGF,KAAK,IAAI;AAC9BJ,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMY,KAAK,GAAG,MAAM;AAChBP,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;;AAIA,SAAO;AACHL,IAAAA,KAAK,EAAES,UAAU,CAACT,KADf;AAEHY,IAAAA,QAAQ,EAAEA,QAFP;AAGHM,IAAAA,OAAO,EAAEP,YAHN;AAIHM,IAAAA,KAAK,EAAEA,KAJJ;AAKHJ,IAAAA,kBAAkB,EAAEA,kBALjB;AAMHG,IAAAA,gBAAgB,EAAEA;AANf,GAAP;AASH,CA1BD;;GAAMT,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\n\nconst intialState = {\n    value: '',\n    isTouched: false\n}\nconst inputStateReducer = (state, action) => {\n    if(action.type === 'INPUT'){\n     return {value : action.val, isTouched : state.isTouched}\n\n    }else if(action.type === 'BLUR'){\n        return {value : action.val, isTouched : true}\n\n    }else if(action.type === 'RESET'){\n\n    }\n\n    return intialState;\n\n}\n\nconst useInput = (validateValue) => {\n    const [inputState, dispatch] = useReducer(inputStateReducer, intialState);\n    const valueIsValid = validateValue(inputState.value);\n    const hasError = !valueIsValid && inputState.isTouched;\n\n    const valueChangeHandler = event => {\n        dispatch({ type: 'INPUT', val: event.target.value });\n\n    }\n    const inputBlurHandler = event => {\n        dispatch({ type: 'BLUR' });\n    }\n\n    const reset = () => {\n        dispatch({ type: 'RESET' });\n    }\n\n    return {\n        value: inputState.value,\n        hasError: hasError,\n        isValid: valueIsValid,\n        reset: reset,\n        valueChangeHandler: valueChangeHandler,\n        inputBlurHandler: inputBlurHandler\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}