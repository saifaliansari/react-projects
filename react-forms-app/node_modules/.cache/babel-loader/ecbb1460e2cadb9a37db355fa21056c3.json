{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst intialState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return intialState;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, intialState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      val: event.target.value\n    });\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch();\n  };\n\n  return {\n    value: enteredValue,\n    hasError: hasError,\n    isValid: valueIsValid,\n    reset: reset,\n    valueChangeHandler: valueChangeHandler,\n    inputBlurHandler: inputBlurHandler\n  };\n};\n\n_s(useInput, \"m/y5QtN449QA2vZl0+cneiPoGLs=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-forms-app/src/hooks/use-input.js"],"names":["useReducer","intialState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","type","val","target","inputBlurHandler","reset","enteredValue","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,SAAS,EAAE;AAFK,CAApB;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEzC,SAAOL,WAAP;AAEH,CAJD;;AAMA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAK,CAACC,UAAD,EAAYC,QAAZ,IAAwBV,UAAU,CAACI,iBAAD,EAAmBH,WAAnB,CAAvC;AACA,QAAMU,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACP,KAAZ,CAAlC;AACA,QAAMU,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACN,SAA7C;;AAEA,QAAMU,kBAAkB,GAAGC,KAAK,IAAI;AAChCJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAC,OAAN;AAAcC,MAAAA,GAAG,EAAGF,KAAK,CAACG,MAAN,CAAaf;AAAjC,KAAD,CAAR;AAEH,GAHD;;AAIA,QAAMgB,gBAAgB,GAAGJ,KAAK,IAAI;AAC9BJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMI,KAAK,GAAG,MAAM;AAChBT,IAAAA,QAAQ;AACX,GAFD;;AAIA,SAAO;AACHR,IAAAA,KAAK,EAAEkB,YADJ;AAEHR,IAAAA,QAAQ,EAAEA,QAFP;AAGHS,IAAAA,OAAO,EAAEV,YAHN;AAIHQ,IAAAA,KAAK,EAAEA,KAJJ;AAKHN,IAAAA,kBAAkB,EAAEA,kBALjB;AAMHK,IAAAA,gBAAgB,EAAEA;AANf,GAAP;AASH,CA1BD;;GAAMX,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\n\nconst intialState = {\n    value: '',\n    isTouched: false\n}\nconst inputStateReducer = (state, action) => {\n\n    return intialState;\n\n}\n\nconst useInput = (validateValue) => {\n    const[inputState,dispatch] = useReducer(inputStateReducer,intialState);\n    const valueIsValid = validateValue(inputState.value);\n    const hasError = !valueIsValid && inputState.isTouched;\n\n    const valueChangeHandler = event => {\n        dispatch({type:'INPUT',val : event.target.value});\n        \n    }\n    const inputBlurHandler = event => {\n        dispatch({type:'BLUR'});\n    }\n\n    const reset = () => {\n        dispatch()\n    }\n\n    return {\n        value: enteredValue,\n        hasError: hasError,\n        isValid: valueIsValid,\n        reset: reset,\n        valueChangeHandler: valueChangeHandler,\n        inputBlurHandler: inputBlurHandler\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}