{"ast":null,"code":"var _jsxFileName = \"/Users/saifaliansari/workspace/react-projects/react-forms-app/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isEmail = value => {\n  return value.trim() !== '' && value.includes('@');\n};\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredFirstName,\n    hasError: firstNameInputHasError,\n    isValid: enteredFirstNameIsValid,\n    reset: resetFirstNameInput,\n    valueChangeHandler: firstNameInputChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    hasError: lastNameInputHasError,\n    isValid: enteredLastNameIsValid,\n    reset: resetLastNameInput,\n    valueChangeHandler: lastNameInputChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    reset: resetEmailInput,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler\n  } = useInput(isEmail);\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid) {\n    formIsValid = true;\n  }\n\n  const firstNameClasses = firstNameInputHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredFirstName,\n          onChange: firstNameInputChangeHandler,\n          onBlur: firstNameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter valid First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastName,\n          onChange: lastNameInputChangeHandler,\n          onBlur: lastNameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter valid Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmail,\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"82dAFskI5OAdscvxMBjzC4gp/Bs=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-forms-app/src/components/BasicForm.js"],"names":["useInput","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","enteredFirstName","hasError","firstNameInputHasError","isValid","enteredFirstNameIsValid","reset","resetFirstNameInput","valueChangeHandler","firstNameInputChangeHandler","inputBlurHandler","firstNameInputBlurHandler","enteredLastName","lastNameInputHasError","enteredLastNameIsValid","resetLastNameInput","lastNameInputChangeHandler","lastNameInputBlurHandler","enteredEmail","emailInputHasError","enteredEmailIsValid","resetEmailInput","emailInputChangeHandler","emailInputBlurHandler","formIsValid","firstNameClasses","lastNameClasses","emailClasses"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\n\nconst isNotEmpty = (value) => value.trim() !== '';\n\nconst isEmail = (value) => { return value.trim() !=='' && value.includes('@') }\n\nconst BasicForm = (props) => {\n  const { value: enteredFirstName,\n    hasError: firstNameInputHasError,\n    isValid: enteredFirstNameIsValid,\n    reset: resetFirstNameInput,\n    valueChangeHandler: firstNameInputChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler } = useInput(isNotEmpty);\n\n\n  const { value: enteredLastName,\n    hasError: lastNameInputHasError,\n    isValid: enteredLastNameIsValid,\n    reset: resetLastNameInput,\n    valueChangeHandler: lastNameInputChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler } = useInput(isNotEmpty);\n\n  const { value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    reset: resetEmailInput,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler } = useInput(isEmail);\n\n    let formIsValid = false;\n    if(enteredFirstNameIsValid && enteredLastNameIsValid ){\n      formIsValid = true;\n    }\n\n\n  const firstNameClasses = firstNameInputHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n\n\n\n\n  return (\n    <form>\n      <div className='control-group'>\n        <div className={firstNameClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name'\n            value={enteredFirstName}\n            onChange={firstNameInputChangeHandler}\n            onBlur={firstNameInputBlurHandler} />\n          {firstNameInputHasError && <p>Enter valid First Name</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name'\n            value={enteredLastName}\n            onChange={lastNameInputChangeHandler}\n            onBlur={lastNameInputBlurHandler} />\n          {lastNameInputHasError && <p>Enter valid Last Name</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name'\n          value={enteredEmail}\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler} />\n        {emailInputHasError && <p>Enter valid Email</p>}\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}