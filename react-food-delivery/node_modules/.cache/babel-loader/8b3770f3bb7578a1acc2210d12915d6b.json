{"ast":null,"code":"var _jsxFileName = \"/Users/saifaliansari/workspace/react-projects/react-food-delivery/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingIndex = state.items.findIndex(item => {\n      return item.id === action.item.id;\n    });\n    const existingCartItem = state.items[existingIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      let updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updateItems = [...state.items];\n      updatedItems;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updateTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  } else if (action.type === 'REMOVE') {}\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-food-delivery/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","updateItems","concat","updateTotalAmount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,aAAa,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAAsBC,IAAI,IAAE;AAAC,aAAOA,IAAI,CAACC,EAAL,KAAWL,MAAM,CAACI,IAAP,CAAYC,EAA9B;AAAiC,KAA9D,CAAtB;AACA,UAAMC,gBAAgB,GAAGP,KAAK,CAACH,KAAN,CAAYM,aAAZ,CAAzB;AACA,QAAIK,YAAJ;;AACA,QAAGD,gBAAH,EAAoB;AAChB,UAAIE,WAAW,GAAG,EACd,GAAGF,gBADW;AAEdG,QAAAA,MAAM,EAAGH,gBAAgB,CAACG,MAAjB,GAA0BT,MAAM,CAACI,IAAP,CAAYK;AAFjC,OAAlB;AAIAC,MAAAA,WAAW,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAd;AACAW,MAAAA,YAAY;AAEf,KARD,MAQK;AACDA,MAAAA,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACI,IAA1B,CAAf;AACH;;AAED,UAAMQ,iBAAiB,GAAGb,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYK,MAAZ,GAAqBT,MAAM,CAACI,IAAP,CAAYS,KAA/E;AACA,WAAO;AAAEjB,MAAAA,KAAK,EAAEW,YAAT;AAAuBV,MAAAA,WAAW,EAAEe;AAApC,KAAP;AACH,GAlBD,MAkBO,IAAIZ,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B,CAEpC;;AACD,SAAON,gBAAP;AACH,CAvBD;;AA0BA,MAAMmB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AACA,QAAMuB,oBAAoB,GAAGd,IAAI,IAAI;AACjCa,IAAAA,kBAAkB,CAAC;AAAEhB,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMe,yBAAyB,GAAGd,EAAE,IAAI;AACpCY,IAAAA,kBAAkB,CAAC;AAAEhB,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AAEH,GAHD;;AAIA,QAAMe,WAAW,GAAG;AAChBxB,IAAAA,KAAK,EAAEoB,SAAS,CAACpB,KADD;AAEhBC,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFP;AAGhBwB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport CartContext from './cart-context'\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const existingIndex = state.items.findIndex(item=>{return item.id ===action.item.id});\n        const existingCartItem = state.items[existingIndex];\n        let updatedItems;\n        if(existingCartItem){   \n            let updatedItem = {\n                ...existingCartItem,\n                amount : existingCartItem.amount + action.item.amount\n            }\n            updateItems = [...state.items]\n            updatedItems\n\n        }else{\n            updatedItems = state.items.concat(action.item);\n        }\n       \n        const updateTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n        return { items: updatedItems, totalAmount: updateTotalAmount };\n    } else if (action.type === 'REMOVE') {\n\n    }\n    return defaultCartState;\n}\n\n\nconst CartProvider = props => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const addItemToCartHandler = item => {\n        dispatchCartAction({ type: 'ADD', item: item });\n    }\n\n    const removeItemFromCartHandler = id => {\n        dispatchCartAction({ type: 'REMOVE', id: id });\n\n    }\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n\n    }\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    );\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}