{"ast":null,"code":"var _jsxFileName = \"/Users/saifaliansari/workspace/react-projects/react-food-delivery/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => {\n  return value.trim() === '';\n};\n\nconst isFiveChars = value => {\n  return value.trim().length === 5;\n};\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postal: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalIsValid\n    });\n    const isFormValid = enteredNameIsValid && enteredPostalIsValid && enteredStreetIsValid && enteredCityIsValid;\n\n    if (!isFormValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalIsValid\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.postal ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"M/ror/PQgVANs+LC+2/7WZL1THE=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-food-delivery/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputValidity","name","street","city","postal","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","isFormValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './Checkout.module.css';\n\nconst isEmpty = (value) => {\n    return value.trim() === '';\n}\n\nconst isFiveChars = (value) => {\n    return value.trim().length === 5;\n}\n\nconst Checkout = (props) => {\n\n    const [formInputsValidity, setFormInputValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postal: true\n    });\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalInputRef = useRef();\n    const cityInputRef = useRef();\n    const confirmHandler = (event) => {\n        event.preventDefault();\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostal = postalInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n\n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n        const enteredPostalIsValid = isFiveChars(enteredPostal);\n        setFormInputValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postal: enteredPostalIsValid\n        })\n\n        const isFormValid = enteredNameIsValid && enteredPostalIsValid && enteredStreetIsValid && enteredCityIsValid;\n\n        if (!isFormValid) {\n            return;\n        }\n        props.onConfirm({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postal: enteredPostalIsValid\n        })\n\n\n    };\n\n    return (\n        <form className={classes.form} onSubmit={confirmHandler}>\n            <div className={`${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`}>\n                <label htmlFor='name'>Your Name</label>\n                <input type='text' id='name' ref={nameInputRef} />\n                {!formInputsValidity.name && <p>Enter valid name</p>}\n            </div>\n            <div className={`${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`}>\n                <label htmlFor='street'>Street</label>\n                <input type='text' id='street' ref={streetInputRef} />\n                {!formInputsValidity.street && <p>Enter valid Street</p>}\n            </div>\n            <div className={`${classes.control} ${formInputsValidity.postal ? '' : classes.invalid}`}>\n                <label htmlFor='postal'>Postal Code</label>\n                <input type='text' id='postal' ref={postalInputRef} />\n                {!formInputsValidity.postal && <p>Enter valid Postal Code</p>}\n            </div>\n            <div className={`${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`}>\n                <label htmlFor='city'>City</label>\n                <input type='text' id='city' ref={cityInputRef} />\n                {!formInputsValidity.city && <p>Enter valid City</p>}\n            </div>\n            <div className={classes.actions}>\n                <button type='button' onClick={props.onCancel}>\n                    Cancel\n                </button>\n                <button className={classes.submit}>Confirm</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}