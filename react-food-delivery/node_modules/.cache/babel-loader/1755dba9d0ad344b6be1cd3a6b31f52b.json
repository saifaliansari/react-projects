{"ast":null,"code":"var _jsxFileName = \"/Users/saifaliansari/workspace/react-projects/react-food-delivery/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingIndex = state.items.findIndex(item => {\n      return item.id === action.item.id;\n    });\n    const updateItems = state.items.concat(action.item);\n    const updateTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  } else if (action.type === 'REMOVE') {}\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-food-delivery/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingIndex","findIndex","item","id","updateItems","concat","updateTotalAmount","amount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,aAAa,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAAsBC,IAAI,IAAE;AAAC,aAAOA,IAAI,CAACC,EAAL,KAAWL,MAAM,CAACI,IAAP,CAAYC,EAA9B;AAAiC,KAA9D,CAAtB;AAEA,UAAMC,WAAW,GAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMI,iBAAiB,GAAGT,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYK,MAAZ,GAAqBT,MAAM,CAACI,IAAP,CAAYM,KAA/E;AACA,WAAO;AAAEd,MAAAA,KAAK,EAAEU,WAAT;AAAsBT,MAAAA,WAAW,EAAEW;AAAnC,KAAP;AACH,GAND,MAMO,IAAIR,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B,CAEpC;;AACD,SAAON,gBAAP;AACH,CAXD;;AAcA,MAAMgB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AACA,QAAMoB,oBAAoB,GAAGX,IAAI,IAAI;AACjCU,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMY,yBAAyB,GAAGX,EAAE,IAAI;AACpCS,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AAEH,GAHD;;AAIA,QAAMY,WAAW,GAAG;AAChBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADD;AAEhBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFP;AAGhBqB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport CartContext from './cart-context'\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const existingIndex = state.items.findIndex(item=>{return item.id ===action.item.id});\n        \n        const updateItems = state.items.concat(action.item);\n        const updateTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n        return { items: updateItems, totalAmount: updateTotalAmount };\n    } else if (action.type === 'REMOVE') {\n\n    }\n    return defaultCartState;\n}\n\n\nconst CartProvider = props => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const addItemToCartHandler = item => {\n        dispatchCartAction({ type: 'ADD', item: item });\n    }\n\n    const removeItemFromCartHandler = id => {\n        dispatchCartAction({ type: 'REMOVE', id: id });\n\n    }\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n\n    }\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    );\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}