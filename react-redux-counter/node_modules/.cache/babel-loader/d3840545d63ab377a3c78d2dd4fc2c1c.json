{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst intialAuthState = {\n  isAuthenticated: false\n};\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: intialAuthState,\n  reducers: {\n    login(state) {},\n\n    logout() {}\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-redux-counter/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","intialAuthState","isAuthenticated","authenticationSlice","login","logout","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,MAAMY,eAAe,GAAG;AAACC,EAAAA,eAAe,EAAG;AAAnB,CAAxB;AAEA,MAAMC,mBAAmB,GAAGlB,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,gBAD8B;AAEpCC,EAAAA,YAAY,EAAGS,eAFqB;AAGpCR,EAAAA,QAAQ,EAAC;AACLW,IAAAA,KAAK,CAACT,KAAD,EAAO,CAEX,CAHI;;AAILU,IAAAA,MAAM,GAAE,CAEP;;AANI;AAH2B,CAAD,CAAvC;AAaA,MAAMC,KAAK,GAAGpB,cAAc,CACxB;AAAEqB,EAAAA,OAAO,EAAEjB,YAAY,CAACiB;AAAxB,CADwB,CAA5B;AAGA,OAAO,MAAMC,cAAc,GAAGlB,YAAY,CAACmB,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit'\nconst initialCounterState = { counter: 0, showCounter: true };\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\n\nconst intialAuthState = {isAuthenticated : false}\n\nconst authenticationSlice = createSlice({\n    name :'authentication',\n    initialState : intialAuthState,\n    reducers:{\n        login(state){\n\n        },\n        logout(){\n\n        }\n    }\n})\n\nconst store = configureStore(\n    { reducer: counterSlice.reducer }\n);\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}