{"ast":null,"code":"var _jsxFileName = \"/Users/saifaliansari/workspace/react-projects/react-redux-shopping/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending',\n        message: 'Sending Cart Data'\n      }));\n      const reponse = await fetch('https://react-http-b7ee0-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!reponse.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent Cart Data'\n      })); //const reponseData = await sendCartData.json();\n    };\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Error Sending Data'\n      }));\n    });\n  }, [cart, dispatch]);\n  const cartIsVisisble = useSelector(state => {\n    return state.ui.cartIsVisible;\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v4G7sGJyRfdO5psF1t9qtl4sthI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/saifaliansari/workspace/react-projects/react-redux-shopping/src/App.js"],"names":["React","useEffect","useSelector","useDispatch","Cart","Layout","Products","uiActions","App","cart","state","notification","ui","dispatch","sendCartData","showNotification","status","title","message","reponse","fetch","method","body","JSON","stringify","ok","Error","catch","error","cartIsVisisble","cartIsVisible"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,YAAY,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACE,EAAN,CAASD,YAAnB,CAAhC;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,YAAY,GAAG,YAAY;AAC/BD,MAAAA,QAAQ,CAACN,SAAS,CAACQ,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,SAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAMA,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,gEAAD,EAAmE;AAC5FC,QAAAA,MAAM,EAAE,KADoF;AAE5FC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,IAAf;AAFsF,OAAnE,CAA3B;;AAIA,UAAI,CAACU,OAAO,CAACM,EAAb,EAAiB;AACf,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACDb,MAAAA,QAAQ,CAACN,SAAS,CAACQ,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,SAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR,CAd+B,CAoB/B;AACD,KArBD;;AAsBAJ,IAAAA,YAAY,GAAGa,KAAf,CAAqBC,KAAK,IAAI;AAC5Bf,MAAAA,QAAQ,CAACN,SAAS,CAACQ,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,OAD0B;AAElCC,QAAAA,KAAK,EAAE,OAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAMD,KAPD;AAQD,GA/BQ,EA+BN,CAACT,IAAD,EAAOI,QAAP,CA/BM,CAAT;AAiCA,QAAMgB,cAAc,GAAG3B,WAAW,CAACQ,KAAK,IAAI;AAC1C,WAAOA,KAAK,CAACE,EAAN,CAASkB,aAAhB;AACD,GAFiC,CAAlC;AAGA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA9CQtB,G;UACMN,W,EACQA,W,EACJC,W,EAkCMD,W;;;KArChBM,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice'\n\n\n\n\nfunction App() {\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification)\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending',\n        message: 'Sending Cart Data'\n\n      }))\n      const reponse = await fetch('https://react-http-b7ee0-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      })\n      if (!reponse.ok) {\n        throw new Error('Something went wrong')\n      }\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent Cart Data'\n\n      }))\n      //const reponseData = await sendCartData.json();\n    }\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Error Sending Data'\n\n      }))\n    });\n  }, [cart, dispatch]);\n\n  const cartIsVisisble = useSelector(state => {\n    return state.ui.cartIsVisible\n  })\n  return (\n    <React.Fragment>\n\n    </React.Fragment>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}